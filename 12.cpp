//12. Синхронизированный вывод 2
//
//Докажите, что задача 11 не может быть решена с использованием двух мьютексов без
//использования других средств синхронизации.
//
//#include <iostream>
//#include <thread>
//#include <mutex>
//
//using namespace std;
//
//// Объявляем два мьютекса
//mutex mtx1, mtx2;
//
//void threadF() {
//    for (int i = 0; i < 10; ++i) {
//        // Попытка захватить первый мьютекс
//        mtx1.lock();
//        cout << "Дочерний Поток: " << i << endl;
//        // Освобождение второго мьютекса
//        mtx2.unlock();
//    }
//}
//
//int main() {
//    setlocale(LC_ALL, "Russian");
//
//    // Создаем дочерний поток, который будет выполнять функцию threadF
//    thread t(threadF);
//
//    for (int i = 0; i < 10; ++i) {
//        // Попытка захватить второй мьютекс
//        mtx2.lock();
//        cout << "Родительский Поток: " << i << endl;
//        // Освобождение первого мьютекса
//        mtx1.unlock();
//    }
//
//    // Ждем завершения дочернего потока
//    t.join();
//
//    return 0;
//}
